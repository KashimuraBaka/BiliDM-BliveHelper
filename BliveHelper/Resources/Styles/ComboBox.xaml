<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:components="clr-namespace:BliveHelper.Views.Components">
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border
                            x:Name="ToggleOuterBorder"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Border
                                x:Name="splitBorder"
                                Margin="0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                BorderBrush="Transparent"
                                BorderThickness="0">
                                <Path
                                    x:Name="arrow"
                                    Width="{TemplateBinding FontSize}"
                                    Height="{TemplateBinding FontSize}"
                                    Margin="0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    Data="M7,10L12,15L17,10H7Z"
                                    Fill="{TemplateBinding Foreground}"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Uniform" />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="arrow" Property="Fill" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="arrow" Property="Fill" Value="{DynamicResource MaterialDesign.Brush.ComboBox.Disabled}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ToggleOuterBorder" Property="BorderBrush" Value="Transparent" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ToggleOuterBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.ComboBox.Disabled}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleY="-1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid>
            <AdornerDecorator>
                <Border
                    x:Name="OuterBorder"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding components:ElementAssist.CornerRadius}">
                    <Grid Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
                        <ToggleButton
                            x:Name="toggleButton"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxToggleButton}" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                    </Grid>
                </Border>
            </AdornerDecorator>
            <Popup
                MinWidth="{TemplateBinding ActualWidth}"
                AllowsTransparency="True"
                Focusable="False"
                HorizontalOffset="0"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                PlacementTarget="{Binding ElementName=OuterBorder}"
                PopupAnimation="Fade"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                VerticalOffset="4">
                <Border
                    Padding="0,4"
                    Background="White"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding components:ElementAssist.CornerRadius}">
                    <ContentControl>
                        <ScrollViewer MinHeight="1" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                        </ScrollViewer>
                    </ContentControl>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{Binding Path=(components:ElementAssist.BorderHoverBrush), RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border" Padding="{TemplateBinding Padding}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#cccccc" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="#E3E5E7" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="components:ElementAssist.CornerRadius" Value="4" />
        <Setter Property="components:ElementAssist.BorderHoverBrush" Value="#FF6699" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItem}" />
    </Style>
</ResourceDictionary>